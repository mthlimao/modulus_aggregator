import os
import click
from pathlib import Path
from tensorboard.backend.event_processing import event_accumulator
from modulus_aggregator.constants import RUN_PATH_NOT_FOUND


@click.command()
@click.option('-ep', '--experiment_path', type=click.Path(exists=True), nargs=1, required=True,
              help="Path where the Modulus' experiment models are saved. "
                   "Each subpath of the experiment path will be related to a single run. " 
                   "The experiment path could be, for example, the 'outputs' or " 
                   "the 'multirun' directories generated by Modulus. "
                   "For now, this option is mandatory.")
def show(experiment_path):
    """
    This command basically shows to the user all registered tags in the experiment.
    This command assumes that every model trained in the --experiment_path has the
    same registered Tags.
    """
    try:
        experiment_path = Path(experiment_path).resolve(strict=True)

        for run in os.listdir(experiment_path):
            run_path = experiment_path / run            
            if run_path.is_dir():
                number_tensors = 0
                ea_object = None
                for event_file in [file for file in os.listdir(run_path) if 'events.out.tfevents' in file]:
                    f = run_path / event_file
                    ea = event_accumulator.EventAccumulator(f.as_posix()).Reload()
                    if len(ea.Tags()['tensors']) > number_tensors:
                        number_tensors = len(ea.Tags()['tensors'])
                        ea_object = ea
                
                for tag_name, tag_values in ea_object.Tags().items():
                    if tag_values not in [[], False]:
                        click.echo(f"Showing {tag_name}:")
                        click.echo(f"{', '.join(tag_values)}")
                
                break

    except FileNotFoundError:
        click.echo(RUN_PATH_NOT_FOUND)
